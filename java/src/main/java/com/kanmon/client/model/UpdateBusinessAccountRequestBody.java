/*
 * Kanmon Public V2 API
 * Kanmon's public api. Contains all of the endpoints for both capital providers and platforms
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kanmon.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.kanmon.client.JSON;

/**
 * UpdateBusinessAccountRequestBody
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-08-02T17:11:18.940267-07:00[America/Los_Angeles]", comments = "Generator version: 7.5.0")
public class UpdateBusinessAccountRequestBody {
  public static final String SERIALIZED_NAME_PLATFORM_BANK_ACCOUNT_ID = "platformBankAccountId";
  @SerializedName(SERIALIZED_NAME_PLATFORM_BANK_ACCOUNT_ID)
  private String platformBankAccountId;

  public static final String SERIALIZED_NAME_ACCOUNT_NAME = "accountName";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_NAME)
  private String accountName;

  public static final String SERIALIZED_NAME_ACCOUNT_NUMBER = "accountNumber";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_NUMBER)
  private String accountNumber;

  public static final String SERIALIZED_NAME_ROUTING_NUMBER = "routingNumber";
  @SerializedName(SERIALIZED_NAME_ROUTING_NUMBER)
  private String routingNumber;

  public UpdateBusinessAccountRequestBody() {
  }

  public UpdateBusinessAccountRequestBody platformBankAccountId(String platformBankAccountId) {
    this.platformBankAccountId = platformBankAccountId;
    return this;
  }

   /**
   * Your platform’s unique ID for the bank account.
   * @return platformBankAccountId
  **/
  @javax.annotation.Nullable
  public String getPlatformBankAccountId() {
    return platformBankAccountId;
  }

  public void setPlatformBankAccountId(String platformBankAccountId) {
    this.platformBankAccountId = platformBankAccountId;
  }


  public UpdateBusinessAccountRequestBody accountName(String accountName) {
    this.accountName = accountName;
    return this;
  }

   /**
   * The business defined bank account name.
   * @return accountName
  **/
  @javax.annotation.Nullable
  public String getAccountName() {
    return accountName;
  }

  public void setAccountName(String accountName) {
    this.accountName = accountName;
  }


  public UpdateBusinessAccountRequestBody accountNumber(String accountNumber) {
    this.accountNumber = accountNumber;
    return this;
  }

   /**
   * The business’s bank account number. Only digits, no formatting.
   * @return accountNumber
  **/
  @javax.annotation.Nullable
  public String getAccountNumber() {
    return accountNumber;
  }

  public void setAccountNumber(String accountNumber) {
    this.accountNumber = accountNumber;
  }


  public UpdateBusinessAccountRequestBody routingNumber(String routingNumber) {
    this.routingNumber = routingNumber;
    return this;
  }

   /**
   * The business’s bank routing number. Should be a 9 digits number, no formatting.
   * @return routingNumber
  **/
  @javax.annotation.Nullable
  public String getRoutingNumber() {
    return routingNumber;
  }

  public void setRoutingNumber(String routingNumber) {
    this.routingNumber = routingNumber;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateBusinessAccountRequestBody updateBusinessAccountRequestBody = (UpdateBusinessAccountRequestBody) o;
    return Objects.equals(this.platformBankAccountId, updateBusinessAccountRequestBody.platformBankAccountId) &&
        Objects.equals(this.accountName, updateBusinessAccountRequestBody.accountName) &&
        Objects.equals(this.accountNumber, updateBusinessAccountRequestBody.accountNumber) &&
        Objects.equals(this.routingNumber, updateBusinessAccountRequestBody.routingNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(platformBankAccountId, accountName, accountNumber, routingNumber);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateBusinessAccountRequestBody {\n");
    sb.append("    platformBankAccountId: ").append(toIndentedString(platformBankAccountId)).append("\n");
    sb.append("    accountName: ").append(toIndentedString(accountName)).append("\n");
    sb.append("    accountNumber: ").append(toIndentedString(accountNumber)).append("\n");
    sb.append("    routingNumber: ").append(toIndentedString(routingNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("platformBankAccountId");
    openapiFields.add("accountName");
    openapiFields.add("accountNumber");
    openapiFields.add("routingNumber");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to UpdateBusinessAccountRequestBody
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateBusinessAccountRequestBody.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateBusinessAccountRequestBody is not found in the empty JSON string", UpdateBusinessAccountRequestBody.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateBusinessAccountRequestBody.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateBusinessAccountRequestBody` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("platformBankAccountId") != null && !jsonObj.get("platformBankAccountId").isJsonNull()) && !jsonObj.get("platformBankAccountId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `platformBankAccountId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("platformBankAccountId").toString()));
      }
      if ((jsonObj.get("accountName") != null && !jsonObj.get("accountName").isJsonNull()) && !jsonObj.get("accountName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accountName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accountName").toString()));
      }
      if ((jsonObj.get("accountNumber") != null && !jsonObj.get("accountNumber").isJsonNull()) && !jsonObj.get("accountNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accountNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accountNumber").toString()));
      }
      if ((jsonObj.get("routingNumber") != null && !jsonObj.get("routingNumber").isJsonNull()) && !jsonObj.get("routingNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `routingNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("routingNumber").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateBusinessAccountRequestBody.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateBusinessAccountRequestBody' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateBusinessAccountRequestBody> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateBusinessAccountRequestBody.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateBusinessAccountRequestBody>() {
           @Override
           public void write(JsonWriter out, UpdateBusinessAccountRequestBody value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateBusinessAccountRequestBody read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of UpdateBusinessAccountRequestBody given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of UpdateBusinessAccountRequestBody
  * @throws IOException if the JSON string is invalid with respect to UpdateBusinessAccountRequestBody
  */
  public static UpdateBusinessAccountRequestBody fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateBusinessAccountRequestBody.class);
  }

 /**
  * Convert an instance of UpdateBusinessAccountRequestBody to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

