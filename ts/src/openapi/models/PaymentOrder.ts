/**
 * Kanmon Public V2 API
 * Kanmon\'s public api. Contains all of the endpoints for both capital providers and platforms
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { PaymentOrderStatus } from '../models/PaymentOrderStatus';
import { HttpFile } from '../http/http';

export class PaymentOrder {
    /**
    * The UUID representing the payment order in Kanmon.
    */
    'id': string;
    /**
    * The UUID representing the issued product in Kanmon.
    */
    'issuedProductId': string;
    /**
    * The UUID representing the draw request in Kanmon. (only present for Line of Credit).
    */
    'drawRequestId': string | null;
    /**
    * The UUID representing the invoice in Kanmon. (only present for Invoice Financing).
    */
    'invoiceId': string | null;
    /**
    * Your platformâ€™s unique ID for the invoice. (only present for Invoice Financing).
    */
    'platformInvoiceId': string | null;
    /**
    * The effective UTC ISO 8601 date that the payment will process.
    */
    'effectiveDate': string;
    /**
    * The UTC ISO 8601 date that the payment was settled.
    */
    'settledDate': string | null;
    /**
    * The total payment amount - in cents.
    */
    'totalPaymentAmountCents': number;
    /**
    * The principal payment amount - in cents. (null for disbursements).
    */
    'principalPaymentAmountCents': number | null;
    /**
    * The interest payment amount - in cents. (null for disbursements).
    */
    'interestPaymentAmountCents': number | null;
    /**
    * The fee payment amount - in cents. (null for disbursements).
    */
    'feePaymentAmountCents': number | null;
    /**
    * The type of the fee that was charged. (only present when `feePaymentAmountCents` is not 0 or null).
    */
    'feeType': PaymentOrderFeeTypeEnum | null;
    /**
    * The direction of the payment.
    */
    'direction': PaymentOrderDirectionEnum;
    'status': PaymentOrderStatus;
    /**
    * Creation UTC ISO 8601 timestamp of the payment order.
    */
    'createdAt': Date;
    /**
    * Last updated UTC ISO 8601 timestamp of the payment order.
    */
    'updatedAt': Date;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "issuedProductId",
            "baseName": "issuedProductId",
            "type": "string",
            "format": ""
        },
        {
            "name": "drawRequestId",
            "baseName": "drawRequestId",
            "type": "string",
            "format": ""
        },
        {
            "name": "invoiceId",
            "baseName": "invoiceId",
            "type": "string",
            "format": ""
        },
        {
            "name": "platformInvoiceId",
            "baseName": "platformInvoiceId",
            "type": "string",
            "format": ""
        },
        {
            "name": "effectiveDate",
            "baseName": "effectiveDate",
            "type": "string",
            "format": ""
        },
        {
            "name": "settledDate",
            "baseName": "settledDate",
            "type": "string",
            "format": ""
        },
        {
            "name": "totalPaymentAmountCents",
            "baseName": "totalPaymentAmountCents",
            "type": "number",
            "format": ""
        },
        {
            "name": "principalPaymentAmountCents",
            "baseName": "principalPaymentAmountCents",
            "type": "number",
            "format": ""
        },
        {
            "name": "interestPaymentAmountCents",
            "baseName": "interestPaymentAmountCents",
            "type": "number",
            "format": ""
        },
        {
            "name": "feePaymentAmountCents",
            "baseName": "feePaymentAmountCents",
            "type": "number",
            "format": ""
        },
        {
            "name": "feeType",
            "baseName": "feeType",
            "type": "PaymentOrderFeeTypeEnum",
            "format": ""
        },
        {
            "name": "direction",
            "baseName": "direction",
            "type": "PaymentOrderDirectionEnum",
            "format": ""
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "PaymentOrderStatus",
            "format": ""
        },
        {
            "name": "createdAt",
            "baseName": "createdAt",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "updatedAt",
            "baseName": "updatedAt",
            "type": "Date",
            "format": "date-time"
        }    ];

    static getAttributeTypeMap() {
        return PaymentOrder.attributeTypeMap;
    }

    public constructor() {
    }
}


export enum PaymentOrderFeeTypeEnum {
    LatePayment = 'LATE_PAYMENT',
    InsufficientFunds = 'INSUFFICIENT_FUNDS',
    TransactionFee = 'TRANSACTION_FEE',
    Maintenance = 'MAINTENANCE'
}
export enum PaymentOrderDirectionEnum {
    Disbursement = 'DISBURSEMENT',
    Repayment = 'REPAYMENT'
}

