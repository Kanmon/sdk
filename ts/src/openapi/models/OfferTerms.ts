/**
 * Kanmon Public V2 API
 * Kanmon\'s public api. Contains all of the endpoints for both capital providers and platforms
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { InvoiceFinancingOfferTerms } from '../models/InvoiceFinancingOfferTerms';
import { InvoicePaymentPlan } from '../models/InvoicePaymentPlan';
import { LineOfCreditOfferTerms } from '../models/LineOfCreditOfferTerms';
import { McaOfferTerms } from '../models/McaOfferTerms';
import { TermLoanOfferTerms } from '../models/TermLoanOfferTerms';
import { HttpFile } from '../http/http';

/**
* Terms of the offer.
*/
export class OfferTerms {
    'productType': OfferTermsProductTypeEnum;
    /**
    * The maximum loan amount - in cents.
    */
    'maxLoanAmountCents': number;
    /**
    * The loan amount - in cents. This defaults to `maxLoanAmountCents`. However, the business can select a smaller amount.
    */
    'loanAmountCents': number;
    /**
    * The rate of interest on the loan. E.g. a value of `10` means 10%.
    */
    'interestRatePercentage': number;
    /**
    * The duration of the loan - in months.
    */
    'durationMonths': number;
    /**
    * The fee percentage charged as the borrowing cost of the loan. E.g. a value of `2` means a 2% fee.
    */
    'feePercentage': number;
    /**
    * The total limit allowed for this offer - in cents.
    */
    'totalLimitCents': number;
    /**
    * The pricing plans available for this offer.
    */
    'pricingPlans': Array<InvoicePaymentPlan>;
    /**
    * The loan amount - in cents.
    */
    'advanceAmountCents': number;
    /**
    * The repayment percentage for calculating repayment amounts. E.g. a value of a `20` means 20%. If a business has $100 of income over a repayment period, the repayment amount would be $20.
    */
    'repaymentPercentage': number;
    /**
    * The fee percentage charged as the borrowing cost of the loan. E.g. a value of `1.3` means a 30% fee.
    */
    'feeFactor': number;
    /**
    * The repayment frequency of the loan. E.g. biweekly repayment occurs every 14 days, weekly repayment occurs every 7 days, etc.
    */
    'repaymentFrequency': OfferTermsRepaymentFrequencyEnum;
    /**
    * The total repayment amount in cents required to settle and close the debt. E.g. for a $10,000 loan with a fee factor of 1.3, the repayment amount equates to $13,000.
    */
    'totalRepaymentCents': number;
    /**
    * The duration of the repayment for each draw - in months.
    */
    'repaymentDurationMonths': number;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "productType",
            "baseName": "productType",
            "type": "OfferTermsProductTypeEnum",
            "format": ""
        },
        {
            "name": "maxLoanAmountCents",
            "baseName": "maxLoanAmountCents",
            "type": "number",
            "format": ""
        },
        {
            "name": "loanAmountCents",
            "baseName": "loanAmountCents",
            "type": "number",
            "format": ""
        },
        {
            "name": "interestRatePercentage",
            "baseName": "interestRatePercentage",
            "type": "number",
            "format": ""
        },
        {
            "name": "durationMonths",
            "baseName": "durationMonths",
            "type": "number",
            "format": ""
        },
        {
            "name": "feePercentage",
            "baseName": "feePercentage",
            "type": "number",
            "format": ""
        },
        {
            "name": "totalLimitCents",
            "baseName": "totalLimitCents",
            "type": "number",
            "format": ""
        },
        {
            "name": "pricingPlans",
            "baseName": "pricingPlans",
            "type": "Array<InvoicePaymentPlan>",
            "format": ""
        },
        {
            "name": "advanceAmountCents",
            "baseName": "advanceAmountCents",
            "type": "number",
            "format": ""
        },
        {
            "name": "repaymentPercentage",
            "baseName": "repaymentPercentage",
            "type": "number",
            "format": ""
        },
        {
            "name": "feeFactor",
            "baseName": "feeFactor",
            "type": "number",
            "format": ""
        },
        {
            "name": "repaymentFrequency",
            "baseName": "repaymentFrequency",
            "type": "OfferTermsRepaymentFrequencyEnum",
            "format": ""
        },
        {
            "name": "totalRepaymentCents",
            "baseName": "totalRepaymentCents",
            "type": "number",
            "format": ""
        },
        {
            "name": "repaymentDurationMonths",
            "baseName": "repaymentDurationMonths",
            "type": "number",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return OfferTerms.attributeTypeMap;
    }

    public constructor() {
    }
}


export enum OfferTermsProductTypeEnum {
    LineOfCredit = 'LINE_OF_CREDIT'
}
export enum OfferTermsRepaymentFrequencyEnum {
    Daily = 'DAILY',
    Weekly = 'WEEKLY',
    Biweekly = 'BIWEEKLY',
    Monthly = 'MONTHLY'
}

