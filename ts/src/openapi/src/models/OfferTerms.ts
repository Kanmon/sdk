/* tslint:disable */
/* eslint-disable */
/**
 * Kanmon Public V2 API
 * Kanmon\'s public api. Contains all of the endpoints for both capital providers and platforms
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { InvoiceFinancingOfferTerms } from './InvoiceFinancingOfferTerms';
import {
    instanceOfInvoiceFinancingOfferTerms,
    InvoiceFinancingOfferTermsFromJSON,
    InvoiceFinancingOfferTermsFromJSONTyped,
    InvoiceFinancingOfferTermsToJSON,
} from './InvoiceFinancingOfferTerms';
import type { LineOfCreditOfferTerms } from './LineOfCreditOfferTerms';
import {
    instanceOfLineOfCreditOfferTerms,
    LineOfCreditOfferTermsFromJSON,
    LineOfCreditOfferTermsFromJSONTyped,
    LineOfCreditOfferTermsToJSON,
} from './LineOfCreditOfferTerms';
import type { McaOfferTerms } from './McaOfferTerms';
import {
    instanceOfMcaOfferTerms,
    McaOfferTermsFromJSON,
    McaOfferTermsFromJSONTyped,
    McaOfferTermsToJSON,
} from './McaOfferTerms';
import { ProductType } from './ProductType';
import type { TermLoanOfferTerms } from './TermLoanOfferTerms';
import {
    instanceOfTermLoanOfferTerms,
    TermLoanOfferTermsFromJSON,
    TermLoanOfferTermsFromJSONTyped,
    TermLoanOfferTermsToJSON,
} from './TermLoanOfferTerms';

/**
 * @type OfferTerms
 * Terms of the offer.
 * @export
 */
export type OfferTerms = { productType: 'INVOICE_FINANCING' } & InvoiceFinancingOfferTerms | { productType: 'LINE_OF_CREDIT' } & LineOfCreditOfferTerms | { productType: 'MCA' } & McaOfferTerms | { productType: 'TERM_LOAN' } & TermLoanOfferTerms;

export function OfferTermsFromJSON(json: any): OfferTerms {
    return OfferTermsFromJSONTyped(json, false);
}

export function OfferTermsFromJSONTyped(json: any, ignoreDiscriminator: boolean): OfferTerms {
    if (json == null) {
        return json;
    }
    switch (json['productType']) {
        case 'INVOICE_FINANCING':
            return Object.assign({}, InvoiceFinancingOfferTermsFromJSONTyped(json, true), { productType: ProductType.InvoiceFinancing });
        case 'LINE_OF_CREDIT':
            return Object.assign({}, LineOfCreditOfferTermsFromJSONTyped(json, true), { productType: ProductType.LineOfCredit });
        case 'MCA':
            return Object.assign({}, McaOfferTermsFromJSONTyped(json, true), { productType: ProductType.Mca });
        case 'TERM_LOAN':
            return Object.assign({}, TermLoanOfferTermsFromJSONTyped(json, true), { productType: ProductType.TermLoan });
        default:
            throw new Error(`No variant of OfferTerms exists with 'productType=${json['productType']}'`);
    }
}

export function OfferTermsToJSON(value?: OfferTerms | null): any {
    if (value == null) {
        return value;
    }
    switch (value['productType']) {
        case 'INVOICE_FINANCING':
            return InvoiceFinancingOfferTermsToJSON(value);
        case 'LINE_OF_CREDIT':
            return LineOfCreditOfferTermsToJSON(value);
        case 'MCA':
            return McaOfferTermsToJSON(value);
        case 'TERM_LOAN':
            return TermLoanOfferTermsToJSON(value);
        default:
            throw new Error(`No variant of OfferTerms exists with 'productType=${value['productType']}'`);
    }

}

