/* tslint:disable */
/* eslint-disable */
/**
 * Kanmon Public V2 API
 * Kanmon\'s public api. Contains all of the endpoints for both capital providers and platforms
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BankAccountAlreadyExistException
 */
export interface BankAccountAlreadyExistException {
    /**
     * Safe for programmatic use.
     * @type {string}
     * @memberof BankAccountAlreadyExistException
     */
    errorCode: BankAccountAlreadyExistExceptionErrorCodeEnum;
    /**
     * The human readable description of the error.
     * @type {string}
     * @memberof BankAccountAlreadyExistException
     */
    message: string;
    /**
     * When the error occurred - ISO 8601 format.
     * @type {string}
     * @memberof BankAccountAlreadyExistException
     */
    timestamp: string;
}


/**
 * @export
 */
export const BankAccountAlreadyExistExceptionErrorCodeEnum = {
    BankAccountAlreadyExistException: 'BankAccountAlreadyExistException'
} as const;
export type BankAccountAlreadyExistExceptionErrorCodeEnum = typeof BankAccountAlreadyExistExceptionErrorCodeEnum[keyof typeof BankAccountAlreadyExistExceptionErrorCodeEnum];


/**
 * Check if a given object implements the BankAccountAlreadyExistException interface.
 */
export function instanceOfBankAccountAlreadyExistException(value: object): boolean {
    if (!('errorCode' in value)) return false;
    if (!('message' in value)) return false;
    if (!('timestamp' in value)) return false;
    return true;
}

export function BankAccountAlreadyExistExceptionFromJSON(json: any): BankAccountAlreadyExistException {
    return BankAccountAlreadyExistExceptionFromJSONTyped(json, false);
}

export function BankAccountAlreadyExistExceptionFromJSONTyped(json: any, ignoreDiscriminator: boolean): BankAccountAlreadyExistException {
    if (json == null) {
        return json;
    }
    return {
        
        'errorCode': json['errorCode'],
        'message': json['message'],
        'timestamp': json['timestamp'],
    };
}

export function BankAccountAlreadyExistExceptionToJSON(value?: BankAccountAlreadyExistException | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'errorCode': value['errorCode'],
        'message': value['message'],
        'timestamp': value['timestamp'],
    };
}

