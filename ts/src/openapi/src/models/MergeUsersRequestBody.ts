/* tslint:disable */
/* eslint-disable */
/**
 * Kanmon Public V2 API
 * Kanmon\'s public api. Contains all of the endpoints for both capital providers and platforms
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MergeUsersRequestBody
 */
export interface MergeUsersRequestBody {
    /**
     * Your platform’s unique business ID for the business to merge users from. Either `sourcePlatformBusinessId` or `sourceBusinessId` is required.
     * @type {string}
     * @memberof MergeUsersRequestBody
     */
    sourcePlatformBusinessId?: string;
    /**
     * The UUID representing the business in Kanmon to merge users from. Either `sourcePlatformBusinessId` or `sourceBusinessId` is required.
     * @type {string}
     * @memberof MergeUsersRequestBody
     */
    sourceBusinessId?: string;
    /**
     * Your platform’s unique business ID for the business to merge users to. Either `targetPlatformBusinessId` or `targetBusinessId` is required.
     * @type {string}
     * @memberof MergeUsersRequestBody
     */
    targetPlatformBusinessId?: string;
    /**
     * The UUID representing the business in Kanmon to merge users to. Either `targetPlatformBusinessId` or `targetBusinessId` is required.
     * @type {string}
     * @memberof MergeUsersRequestBody
     */
    targetBusinessId?: string;
}

/**
 * Check if a given object implements the MergeUsersRequestBody interface.
 */
export function instanceOfMergeUsersRequestBody(value: object): value is MergeUsersRequestBody {
    return true;
}

export function MergeUsersRequestBodyFromJSON(json: any): MergeUsersRequestBody {
    return MergeUsersRequestBodyFromJSONTyped(json, false);
}

export function MergeUsersRequestBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): MergeUsersRequestBody {
    if (json == null) {
        return json;
    }
    return {
        
        'sourcePlatformBusinessId': json['sourcePlatformBusinessId'] == null ? undefined : json['sourcePlatformBusinessId'],
        'sourceBusinessId': json['sourceBusinessId'] == null ? undefined : json['sourceBusinessId'],
        'targetPlatformBusinessId': json['targetPlatformBusinessId'] == null ? undefined : json['targetPlatformBusinessId'],
        'targetBusinessId': json['targetBusinessId'] == null ? undefined : json['targetBusinessId'],
    };
}

export function MergeUsersRequestBodyToJSON(value?: MergeUsersRequestBody | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'sourcePlatformBusinessId': value['sourcePlatformBusinessId'],
        'sourceBusinessId': value['sourceBusinessId'],
        'targetPlatformBusinessId': value['targetPlatformBusinessId'],
        'targetBusinessId': value['targetBusinessId'],
    };
}

