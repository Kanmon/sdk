/* tslint:disable */
/* eslint-disable */
/**
 * Kanmon Public V2 API
 * Kanmon\'s public api. Contains all of the endpoints for both capital providers and platforms
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { BusinessNotFoundException } from './BusinessNotFoundException';
import {
    instanceOfBusinessNotFoundException,
    BusinessNotFoundExceptionFromJSON,
    BusinessNotFoundExceptionFromJSONTyped,
    BusinessNotFoundExceptionToJSON,
} from './BusinessNotFoundException';
import type { CustomInitializationNotFoundException } from './CustomInitializationNotFoundException';
import {
    instanceOfCustomInitializationNotFoundException,
    CustomInitializationNotFoundExceptionFromJSON,
    CustomInitializationNotFoundExceptionFromJSONTyped,
    CustomInitializationNotFoundExceptionToJSON,
} from './CustomInitializationNotFoundException';

/**
 * @type CreateBusiness404Response
 * 
 * @export
 */
export type CreateBusiness404Response = BusinessNotFoundException | CustomInitializationNotFoundException;

export function CreateBusiness404ResponseFromJSON(json: any): CreateBusiness404Response {
    return CreateBusiness404ResponseFromJSONTyped(json, false);
}

export function CreateBusiness404ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateBusiness404Response {
    if (json == null) {
        return json;
    }
    if (instanceOfBusinessNotFoundException(json)) {
        return BusinessNotFoundExceptionFromJSONTyped(json, true);
    }
    if (instanceOfCustomInitializationNotFoundException(json)) {
        return CustomInitializationNotFoundExceptionFromJSONTyped(json, true);
    }

    return {} as any;
}

export function CreateBusiness404ResponseToJSON(value?: CreateBusiness404Response | null): any {
    if (value == null) {
        return value;
    }

    if (instanceOfBusinessNotFoundException(value)) {
        return BusinessNotFoundExceptionToJSON(value as BusinessNotFoundException);
    }
    if (instanceOfCustomInitializationNotFoundException(value)) {
        return CustomInitializationNotFoundExceptionToJSON(value as CustomInitializationNotFoundException);
    }

    return {};
}

