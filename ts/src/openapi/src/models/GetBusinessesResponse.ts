/* tslint:disable */
/* eslint-disable */
/**
 * Kanmon Public V2 API
 * Kanmon\'s public api. Contains all of the endpoints for both capital providers and platforms
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PaginationResult } from './PaginationResult';
import {
    PaginationResultFromJSON,
    PaginationResultFromJSONTyped,
    PaginationResultToJSON,
} from './PaginationResult';
import type { Business } from './Business';
import {
    BusinessFromJSON,
    BusinessFromJSONTyped,
    BusinessToJSON,
} from './Business';

/**
 * 
 * @export
 * @interface GetBusinessesResponse
 */
export interface GetBusinessesResponse {
    /**
     * Array of businesses.
     * @type {Array<Business>}
     * @memberof GetBusinessesResponse
     */
    businesses: Array<Business>;
    /**
     * Pagination metadata.
     * @type {PaginationResult}
     * @memberof GetBusinessesResponse
     */
    pagination: PaginationResult;
}

/**
 * Check if a given object implements the GetBusinessesResponse interface.
 */
export function instanceOfGetBusinessesResponse(value: object): value is GetBusinessesResponse {
    if (!('businesses' in value) || value['businesses'] === undefined) return false;
    if (!('pagination' in value) || value['pagination'] === undefined) return false;
    return true;
}

export function GetBusinessesResponseFromJSON(json: any): GetBusinessesResponse {
    return GetBusinessesResponseFromJSONTyped(json, false);
}

export function GetBusinessesResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetBusinessesResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'businesses': ((json['businesses'] as Array<any>).map(BusinessFromJSON)),
        'pagination': PaginationResultFromJSON(json['pagination']),
    };
}

export function GetBusinessesResponseToJSON(value?: GetBusinessesResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'businesses': ((value['businesses'] as Array<any>).map(BusinessToJSON)),
        'pagination': PaginationResultToJSON(value['pagination']),
    };
}

