/* tslint:disable */
/* eslint-disable */
/**
 * Kanmon Public V2 API
 * Kanmon\'s public api. Contains all of the endpoints for both capital providers and platforms
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { User } from './User';
import {
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
} from './User';
import type { PaginationResult } from './PaginationResult';
import {
    PaginationResultFromJSON,
    PaginationResultFromJSONTyped,
    PaginationResultToJSON,
} from './PaginationResult';

/**
 * 
 * @export
 * @interface GetUsersResponse
 */
export interface GetUsersResponse {
    /**
     * Array of users.
     * @type {Array<User>}
     * @memberof GetUsersResponse
     */
    users: Array<User>;
    /**
     * Pagination metadata.
     * @type {PaginationResult}
     * @memberof GetUsersResponse
     */
    pagination: PaginationResult;
}

/**
 * Check if a given object implements the GetUsersResponse interface.
 */
export function instanceOfGetUsersResponse(value: object): value is GetUsersResponse {
    if (!('users' in value) || value['users'] === undefined) return false;
    if (!('pagination' in value) || value['pagination'] === undefined) return false;
    return true;
}

export function GetUsersResponseFromJSON(json: any): GetUsersResponse {
    return GetUsersResponseFromJSONTyped(json, false);
}

export function GetUsersResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetUsersResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'users': ((json['users'] as Array<any>).map(UserFromJSON)),
        'pagination': PaginationResultFromJSON(json['pagination']),
    };
}

export function GetUsersResponseToJSON(value?: GetUsersResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'users': ((value['users'] as Array<any>).map(UserToJSON)),
        'pagination': PaginationResultToJSON(value['pagination']),
    };
}

