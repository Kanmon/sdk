/* tslint:disable */
/* eslint-disable */
/**
 * Kanmon Public V2 API
 * Kanmon\'s public api. Contains all of the endpoints for both capital providers and platforms
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Address } from './Address';
import {
    AddressFromJSON,
    AddressFromJSONTyped,
    AddressToJSON,
} from './Address';

/**
 * 
 * @export
 * @interface AccountsPayableSessionInvoice
 */
export interface AccountsPayableSessionInvoice {
    /**
     * Your platformâ€™s unique ID for the invoice.
     * @type {string}
     * @memberof AccountsPayableSessionInvoice
     */
    platformInvoiceId: string;
    /**
     * Your user-facing identifier for the invoice. This does not need to be unique. This may or may not be the same as your `platformInvoiceId`.
     * @type {string}
     * @memberof AccountsPayableSessionInvoice
     */
    platformInvoiceNumber: string;
    /**
     * The invoice amount - in cents. This needs to be greater than or equal to 100.
     * @type {number}
     * @memberof AccountsPayableSessionInvoice
     */
    invoiceAmountCents: number;
    /**
     * The date when the invoice will be paid by the payor. ISO 8601 date format. This date must be no more than 5 days in the past. If `invoiceIssuedDate` is provided, then it must be after `invoiceIssuedDate`.
     * @type {string}
     * @memberof AccountsPayableSessionInvoice
     */
    invoiceDueDate: string;
    /**
     * The date when the payee issued the invoice. ISO 8601 date format.
     * @type {string}
     * @memberof AccountsPayableSessionInvoice
     */
    invoiceIssuedDate?: string;
    /**
     * The email of the payee.
     * @type {string}
     * @memberof AccountsPayableSessionInvoice
     */
    payeeEmail?: string;
    /**
     * The address of the payee. The address is optional. If you provide the address, you need to provide all the required fields in the address.
     * @type {Address}
     * @memberof AccountsPayableSessionInvoice
     */
    payeeAddress?: Address;
    /**
     * `INDIVIDUAL` if the payee is a person and `BUSINESS` if the payee is a company.
     * @type {string}
     * @memberof AccountsPayableSessionInvoice
     */
    payeeType: AccountsPayableSessionInvoicePayeeTypeEnum;
    /**
     * The registered name of the payee business when the payee is a business and not an individual. Required and should only be defined if `payeeType` is `BUSINESS`.
     * @type {string}
     * @memberof AccountsPayableSessionInvoice
     */
    payeeBusinessName?: string;
    /**
     * The first name of the payee when the payee is an individual and not a business. Required and should only be defined if `payeeType` is `INDIVIDUAL`.
     * @type {string}
     * @memberof AccountsPayableSessionInvoice
     */
    payeeFirstName?: string;
    /**
     * The middle name of the payee when the payee is an individual and not a business. Optional and should only be defined if `payeeType` is `INDIVIDUAL`.
     * @type {string}
     * @memberof AccountsPayableSessionInvoice
     */
    payeeMiddleName?: string;
    /**
     * The last name of the payee when the payee is an individual and not a business. Required and should only be defined if `payeeType` is `INDIVIDUAL`.
     * @type {string}
     * @memberof AccountsPayableSessionInvoice
     */
    payeeLastName?: string;
    /**
     * The description of the goods or services in the invoice.
     * @type {string}
     * @memberof AccountsPayableSessionInvoice
     */
    description: string;
}


/**
 * @export
 */
export const AccountsPayableSessionInvoicePayeeTypeEnum = {
    BUSINESS: 'BUSINESS',
    INDIVIDUAL: 'INDIVIDUAL'
} as const;
export type AccountsPayableSessionInvoicePayeeTypeEnum = typeof AccountsPayableSessionInvoicePayeeTypeEnum[keyof typeof AccountsPayableSessionInvoicePayeeTypeEnum];


/**
 * Check if a given object implements the AccountsPayableSessionInvoice interface.
 */
export function instanceOfAccountsPayableSessionInvoice(value: object): value is AccountsPayableSessionInvoice {
    if (!('platformInvoiceId' in value) || value['platformInvoiceId'] === undefined) return false;
    if (!('platformInvoiceNumber' in value) || value['platformInvoiceNumber'] === undefined) return false;
    if (!('invoiceAmountCents' in value) || value['invoiceAmountCents'] === undefined) return false;
    if (!('invoiceDueDate' in value) || value['invoiceDueDate'] === undefined) return false;
    if (!('payeeType' in value) || value['payeeType'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    return true;
}

export function AccountsPayableSessionInvoiceFromJSON(json: any): AccountsPayableSessionInvoice {
    return AccountsPayableSessionInvoiceFromJSONTyped(json, false);
}

export function AccountsPayableSessionInvoiceFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccountsPayableSessionInvoice {
    if (json == null) {
        return json;
    }
    return {
        
        'platformInvoiceId': json['platformInvoiceId'],
        'platformInvoiceNumber': json['platformInvoiceNumber'],
        'invoiceAmountCents': json['invoiceAmountCents'],
        'invoiceDueDate': json['invoiceDueDate'],
        'invoiceIssuedDate': json['invoiceIssuedDate'] == null ? undefined : json['invoiceIssuedDate'],
        'payeeEmail': json['payeeEmail'] == null ? undefined : json['payeeEmail'],
        'payeeAddress': json['payeeAddress'] == null ? undefined : AddressFromJSON(json['payeeAddress']),
        'payeeType': json['payeeType'],
        'payeeBusinessName': json['payeeBusinessName'] == null ? undefined : json['payeeBusinessName'],
        'payeeFirstName': json['payeeFirstName'] == null ? undefined : json['payeeFirstName'],
        'payeeMiddleName': json['payeeMiddleName'] == null ? undefined : json['payeeMiddleName'],
        'payeeLastName': json['payeeLastName'] == null ? undefined : json['payeeLastName'],
        'description': json['description'],
    };
}

export function AccountsPayableSessionInvoiceToJSON(value?: AccountsPayableSessionInvoice | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'platformInvoiceId': value['platformInvoiceId'],
        'platformInvoiceNumber': value['platformInvoiceNumber'],
        'invoiceAmountCents': value['invoiceAmountCents'],
        'invoiceDueDate': value['invoiceDueDate'],
        'invoiceIssuedDate': value['invoiceIssuedDate'],
        'payeeEmail': value['payeeEmail'],
        'payeeAddress': AddressToJSON(value['payeeAddress']),
        'payeeType': value['payeeType'],
        'payeeBusinessName': value['payeeBusinessName'],
        'payeeFirstName': value['payeeFirstName'],
        'payeeMiddleName': value['payeeMiddleName'],
        'payeeLastName': value['payeeLastName'],
        'description': value['description'],
    };
}

